@model HIS.MedicineMaster
@{
    Layout = null;
}

@using (Html.BeginForm("AddModify", "MedicineMaster", FormMethod.Post, new { onsubmit = "return SubmitForm(this)" }))
{
    @Html.HiddenFor(model => model.MMID)
    <div class="astriskNote"><span></span></div>
    <div class="form-horizontal">
        <div class="form-group required">
            @Html.LabelFor(model => model.BrandID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-sm-4">
                @Html.DropDownListFor(model => model.BrandID, ViewBag.Brands as SelectList, "--Select--", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.BrandID)
            </div>

            @Html.LabelFor(model => model.BrandCategoryID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-sm-4">
                @Html.DropDownListFor(model => model.BrandCategoryID, ViewBag.BrandCategories as SelectList, "--Select--", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.BrandCategoryID)
            </div>
        </div>
        <div class="form-group required">
            @Html.LabelFor(model => model.SubCategoryID, "Sub Category:", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-sm-4">
                @Html.DropDownListFor(model => model.SubCategoryID, Model.SubCategories.Select(x => new SelectListItem { Text = x.SubCategory, Value = x.SubCategoryID.ToString() }), "--Select--", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SubCategoryID)
            </div>
            @Html.LabelFor(model => model.SupplierID, "Suppliers:", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-sm-4">
                @Html.DropDownListFor(model => model.SupplierID, Model.Suppliers.Select(x => new SelectListItem { Text = x.SupplierName, Value = x.SupplierID.ToString() }), "--Select--", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SupplierID)
            </div>
        </div>
        <div class="form-group required">
            @Html.LabelFor(model => model.MedicineName, new { @class = "control-label col-md-2" })
            <div class="col-sm-4">
                @Html.EditorFor(model => model.MedicineName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MedicineName)
            </div>
            @Html.LabelFor(model => model.MedDose, new { @class = "control-label col-md-2" })
            <div class="col-sm-4">
                @Html.EditorFor(model => model.MedDose, "Combinations:", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MedDose)
            </div>
        </div>
        <div class="form-group">
            <div class="@(Model.MMID > 0 ? "" : "hidden")" style="border: 1px;">
                @Html.LabelFor(model => model.AvailableQuantity, "Available Quantity:", new { @class = "control-label col-md-2" })
                <div class="col-sm-4">
                    @Html.EditorFor(model => model.AvailableQuantity, new { htmlAttributes = new { @class = "form-control numericonly" } })
                </div>
            </div>
            <div class="@(Model.MMID > 0 ? "" : "hidden")" style="border: 1px;">
                @Html.LabelFor(model => model.ItemPrice, "Med Price:", new { @class = "control-label col-md-2" })
                <div class="col-sm-4">
                    @Html.EditorFor(model => model.ItemPrice, new { htmlAttributes = new { Value = (Model.ItemPrice.HasValue ? Model.ItemPrice.Value : 0) > 0 ? Model.ItemPrice.Value.ToString("0.00") : string.Empty, @class = "form-control numericdecimal" } })
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.TriggerQty, new { @class = "control-label col-md-2 required" })
            <div class="col-sm-4">
                @Html.EditorFor(model => model.TriggerQty, new { htmlAttributes = new { @class = "form-control numericonly" } })
                @Html.ValidationMessageFor(model => model.TriggerQty)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-3 col-md-offset-5">
                <input type="submit" value="Submit" class="btn btn-primary" />
                <input type="reset" value="Reset" class="btn" />
            </div>
        </div>
    </div>
}

<script type="text/javascript">

    $(document).ready(function () {
        $("#BrandCategoryID").find("option:not(:first)").remove();
        $("#BrandID").change(function () {
            $.ajax({
                url: '/MedicineMaster/GetCategories',
                type: 'POST',
                datatype: 'application/json',
                contentType: 'application/json',
                data: JSON.stringify({
                    id: +$("#BrandID").val()
                }),
                success: function (res) {
                    $("#BrandCategoryID").find("option:not(:first)").remove();
                    $.each(res, function (data, value) {
                        $("#BrandCategoryID").append($("<option></option>").val(value.CategoryID).html(value.Category));
                    })
                }
            });
        });
    });

    $("#SubCategory").autocomplete({
        source: function (request, response) {
            $.ajax({
                url: "/MedicineMaster/GetSubCategories",
                type: "POST",
                dataType: "json",
                data: { Prefix: request.term },
                success: function (data) {
                    response($.map(data, function (item) {
                        return {
                            label: item.SubCategory,
                            value: item.SubCategory,
                            id: item.SubCategoryID
                        };
                    }))
                },
                error: function () {
                    alert('something went wrong !');
                }
            })
        },
        select: function (e, i) {
            $("#SubCategoryID").val(i.item.id);
        },
        minLength: 1
    });

    $("#SupplierName").autocomplete({
        source: function (request, response) {
            $.ajax({
                url: "/MedicineMaster/GetSuppliers",
                type: "POST",
                dataType: "json",
                data: { Prefix: request.term },
                success: function (data) {
                    response($.map(data, function (item) {
                        return {
                            label: item.SupplierName,
                            value: item.SupplierName,
                            id: item.SupplierID
                        };
                    }))
                },
                error: function () {
                    alert('something went wrong !');
                }
            })
        },
        select: function (e, i) {
            $("#SupplierID").val(i.item.id);
        },
        minLength: 1
    });
</script>