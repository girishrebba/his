@model List<HIS.PatientTest>
@{
    /**/

    Layout = null;
}
<style>
    .ui-widget-content a {
        color: #fff !important
    }

    .table > thead > tr > th {
        text-transform: none;
        font-weight: bold;
    }

    .ui-dialog {
        top: 60px !important;
    }
</style>
@using HIS.HtmlHelpers
@using (Html.BeginForm("PatientTests", "OutPatient", FormMethod.Post, new { id = "ptForm", onsubmit = "return SubmitLabTestForm(this)", enctype = "multipart/form-data" }))
{
    <div class="form-horizontal">
        @if (Model != null && Model.Count > 0)
        {
            @Html.HiddenFor(model => model[0].ENMRNO, new { @id = "ENMRNO" })
            @Html.HiddenFor(model => model[0].LTMID, new { @id = "LTMID" })
            <div class="col-lg-8">
                <div class="form-group">
                    @Html.LabelFor(model => model[0].ENMRNO, "ENMRNO:", new { @class = "control-label col-md-2" })
                    <div class="col-sm-4 lableDisplay">
                        @Html.DisplayFor(model => model[0].ENMRNO, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    @Html.LabelFor(model => model[0].VisitName, "Visit:", new { @class = "control-label col-md-2" })
                    <div class="col-sm-4 lableDisplay">
                        @Html.DisplayFor(model => model[0].VisitName, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model[0].DoctorName, "Doctor:", new { @class = "control-label col-md-2" })
                    <div class="col-sm-4 lableDisplay">
                        @Html.DisplayFor(model => model[0].DoctorName, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-12">
                    <div class="table-responsive">
                        <table class="table table-striped table-bordered" id="ptTable">
                            <thead>
                                <tr>
                                    <th style="width:25%">Test</th>
                                    <th style="width:10%">Values</th>
                                    <th style="width:15%">Date</th>
                                    <th style="width:50%">Impression</th>
                                    <th style="width:10%">Upload Report</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var p in Model)
                                {
                                    <tr>
                                        <td style="display:none">@p.TestID</td>
                                        <td>@p.TestName</td>
                                        <td>@Html.EditorFor(model => p.RecordedValues, new { htmlAttributes = new { @class = "form-control recordValue" } })</td>
                                        <td>
                                            <div id="date-popup" class="input-group date">
                                                @Html.EditorFor(model => p.TestDate, new { htmlAttributes = new { Value = Html.DateFormat(p.TestDate), @class = "datepicker form-control", @placeholder = "" } })
                                                <span class="btndatepicker input-group-addon"><i class="fa fa-calendar"></i></span>
                                            </div>
                                        </td>
                                        <td>@Html.EditorFor(model => p.TestImpression, new { htmlAttributes = new { @class = "form-control testImpression" } })</td>
                                        @*<td>
                                            <a href='@p.ReportPath' target="_blank" class='btn btn-info btn-sm' title='ReportView'><i class="fa fa-file"></i></a>
                                        </td>*@
                                        <td>
                                            @*@Html.LabelFor(model => p.ImageFile, htmlAttributes: new { @class = "control-label col-md-2" })*@
                                            <input type="file" id="file" onchange="upload(@p.TestID);" />
                                        </td>

                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group">
                        <div class="col-md-3 col-md-offset-5">
                            <input type="submit" value="Submit" id="btnSubmit" class="btn btn-primary" />
                        </div>
                    </div>
                </div>
            </div>
        }
        else
        {
            <span style="color:red; font-weight:bold;">No Pending Tests found for this Patient. Please contact your physician!!</span>
        }
    </div>
}

<script type="text/javascript">
    $('.datepicker').datepicker({
        keyboardNavigation: false,
        forceParse: false,
        todayHighlight: true,
        todayBtn: false,
        format: "mm/dd/yyyy"
    });

    $('.btndatepicker').click(function () {
        var id = $(this).closest('tr').find('.datepicker');
        $(id).datepicker('show');
    });


    function upload(name) {

        var fileUpload = $("#file").get(0);
        var files = fileUpload.files;
        // Create FormData object
        var fileData = new FormData();
        // Looping over all files and add it to FormData object
        for (var i = 0; i < files.length; i++) {
            fileData.append(files[i].name, files[i]);
        }
        fileData.append(@Html.Raw(Json.Encode(ViewBag.ENMRNO)), 'emrno');
        fileData.append(name,'test');
        $.ajax({
            url: '/OutPatient/UploadFiles',
            type: "POST",
            contentType: false, // Not to set any content header
            processData: false, // Not to process data
            data: fileData,
            async: false,
            success: function (result) {

            },
            error: function (err) {
                alert(err.statusText);
            }
        });

    };

</script>