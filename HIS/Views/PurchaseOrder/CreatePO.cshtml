@model HIS.PurchaseOrderViewModel
@using HIS.HtmlHelpers;
@{
    Layout = null;
}

<style>
    td {
        padding: 5px;
    }

    .table
    {
       margin-left : 1px;
       margin-right:1px;
    }

    .table > thead > tr > th {
        text-transform: none;
        font-weight: bold;
    }

    .ui-dialog {
        top: 60px !important;
    } 
</style>
@using (Html.BeginForm("CreatePO", "PurchaseOrder", FormMethod.Post, new { id = "poForm", onsubmit = "return SubmitForm(this)" }))
{
<div class="form-horizontal">
    <div class="astriskNote"><span></span></div>
    <div class="row">
        <div class="form-group">
            @Html.LabelFor(model => model.PONumber, new { @class = "control-label col-md-2 required" })
            <div class="col-sm-2">
                @Html.EditorFor(model => model.PONumber, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.PONumber)
            </div>
            @Html.LabelFor(model => model.OrderedDate, htmlAttributes: new { @class = "control-label col-md-2 required" })
            <div class="col-sm-2">
                <div id="date-popup" class="input-group date">
                    @Html.EditorFor(model => model.OrderedDate, new { htmlAttributes = new { Value = Html.DateFormat(Model.OrderedDate), @class = "datepicker form-control", @placeholder = "" } })
                    <span class="btnorderpicker input-group-addon"><i class="fa fa-calendar"></i></span>
                </div>
                @Html.ValidationMessageFor(model => model.OrderedDate, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="row" style="border: 1px;">
        <table class="table table-striped table-bordered" id="poTable">
            <thead>
                <tr>
                    <th style="width:24%">Medicine</th>
                    <th style="width:8%">Order Qty</th>
                    <th style="width:9%">Item(Rs)</th>
                    <th style="width:9%">Sheet(Rs)</th>
                    <th style="width:10%">Batch#</th>
                    <th style="width:10%">Lot#</th>
                    <th style="width:10%">Expiry Date</th>
                    <th style="width:10%">Mfg Date</th>
                    <th style="width:10%">Hosp Price(Rs)</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>
                        @Html.EditorFor(model => model.MedicineWithDose, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.HiddenFor(model => model.MedicineID)
                    </td>
                    <td>
                        @Html.EditorFor(model => model.OrderedQty, new { htmlAttributes = new { Value = Model.OrderedQty > 0 ? Model.OrderedQty.ToString() : string.Empty, @class = "form-control" } })
                    </td>
                    <td>
                        @Html.EditorFor(model => model.PricePerItem, new { htmlAttributes = new { @class = "form-control" } })
                    </td>
                    <td>
                        @Html.EditorFor(model => model.PricePerSheet, new { htmlAttributes = new { @class = "form-control" } })
                    </td>
                    <td>
                        @Html.EditorFor(model => model.BatchNo, new { htmlAttributes = new { @class = "form-control" } })
                    </td>
                    <td>
                        @Html.EditorFor(model => model.LotNo, new { htmlAttributes = new { @class = "form-control" } })
                    </td>
                    <td>
                        <div id="date-popup" class="input-group date">
                            @Html.EditorFor(model => model.ExpiryDate, new { htmlAttributes = new { Value = Html.DateFormat(Model.ExpiryDate), @class = "datepicker form-control", @placeholder = "" } })
                            <span class="btnexpirypicker input-group-addon"><i class="fa fa-calendar"></i></span>
                        </div>
                    </td>
                    <td>
                        <div id="date-popup" class="input-group date">
                            @Html.EditorFor(model => model.MfgDate, new { htmlAttributes = new { Value = Html.DateFormat(Model.MfgDate), @class = "datepicker form-control", @placeholder = "" } })
                            <span class="btnmfgpicker input-group-addon"><i class="fa fa-calendar"></i></span>
                        </div>
                    </td>
                    <td>
                        @Html.EditorFor(model => model.HospitalPrice, new { htmlAttributes = new { @class = "form-control" } })
                    </td>
                    <td><span class="btn btn-success fa fa-plus-circle" style="padding: 0px 3px" id="btnAdd"></span></td>
                </tr>
            </tbody>
        </table>
    </div>
    <div class="row">
        <div class="form-group">
            <div class="col-md-3 col-md-offset-5">
                <input type="submit" value="Submit" id="btnSubmit" class="btn btn-primary disabled" />
            </div>
        </div>
    </div>
</div>
            @*</div>
        </div>
    </div>*@
}
<script type="text/javascript">
    $(function () {
        $('#btnAdd').click(function () {
            var form = $("#poForm")
            $.validator.unobtrusive.parse(form);
            if ($(form).valid()) {
                $('table#poTable > tbody').append('<tr>' +
                    '<td style="display:none">' + $('#MedicineID').val()+'</td>'+ // MedicineID
                    '<td>' + $('#MedicineWithDose').val() + '</td>' + // medicine
                    '<td>' + $('#OrderedQty').val() + '</td>' + // order qty
                    '<td>' + $('#PricePerItem').val() + '</td>' + // item cost
                    '<td>' + $('#PricePerSheet').val() + '</td>' + // sheet cost
                    '<td>' + $('#BatchNo').val() + '</td>' + // batch no
                    '<td>' + $('#LotNo').val() + '</td>' + // lot no
                    '<td>' + $('#ExpiryDate').val() + '</td>' + // expirty date
                    '<td>' + $('#MfgDate').val() + '</td>' + // mfg date
                    '<td>' + $('#HospitalPrice').val() + '</td>' + // Hospital Price
                    '<td><span class="btn btn-danger fa fa-trash" style="padding: 0px 3px" onclick = "remove(this)"></span></td>' +
                    '</tr>');

                clearInputs();
            }
            return false;
        });

        $('#OrderedDate').datepicker({
            keyboardNavigation: false,
            forceParse: false,
            todayHighlight: true,
            todayBtn: false,
            autoclose:true,
            format: "mm/dd/yyyy",language: "en-US"
        });

        $('.btnorderpicker').click(function () {
            $('#OrderedDate').datepicker('show');
        });

        $('#ExpiryDate').datepicker({
            keyboardNavigation: false,
            forceParse: false,
            todayHighlight: true,
            todayBtn: false,
            autoclose: true,
            format: "mm/dd/yyyy",language: "en-US"
        });

        $('.btnexpirypicker').click(function () {
            $('#ExpiryDate').datepicker('show');
        });

        $('#MfgDate').datepicker({
            keyboardNavigation: false,
            forceParse: false,
            todayHighlight: true,
            todayBtn: false,
            autoclose: true,
            format: "mm/dd/yyyy", language: "en-US"
        });

        $('.btnmfgpicker').click(function () {
            $('#MfgDate').datepicker('show');
        });

        $('#btnSubmit').click(function () {
            $('#MedicineWithDose').rules('remove', 'required');
        });

        $("#MedicineWithDose").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/PurchaseOrder/GetMedicines",
                    type: "POST",
                    dataType: "json",
                    data: { Prefix: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return {
                                label: item.MedicineDisplay,
                                value: item.MedicineDisplay,
                                id: item.MMID
                            };
                        }))
                    },
                    error: function () {
                        alert('something went wrong !');
                    }
                })
            },
            select: function (e, i) {
                $("#MedicineID").val(i.item.id);
            },
            minLength: 1
        });
    });

    function remove(e) {
        $(e).closest('tr').remove();
        if ($('#poForm tr').length < 3)
            $('#btnSubmit').addClass('disabled');
    }

    function clearInputs() {
        $('#MedicineWithDose').val('');
        $('#OrderedQty').val('');
        $('#PricePerItem').val('');
        $('#PricePerSheet').val('');
        $('#BatchNo').val('');
        $('#LotNo').val('');
        $('#ExpiryDate').val('');
        $('#btnSubmit').removeClass('disabled');
    }
</script>