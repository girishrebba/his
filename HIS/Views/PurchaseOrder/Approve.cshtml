@{
    /**/

    Layout = null;
}
<style>
    .ui-widget-content a {
        color: #fff !important
    }

    .ui-dialog {
        top: 70px !important;
    }
</style>
@using (Html.BeginForm("Approve", "PurchaseOrder", FormMethod.Post, new { onsubmit = "return SubmitApprovalForm(this)" }))
{
    <input type="hidden" id="poNumber" />
    <div class="row">
        <div class="col-lg-12">
            <div class="table-responsive">
                <table id="poItemsList" class="table table-striped table-bordered" style="width:100%">
                    <thead>
                        <tr>
                            <th>Medicine</th>
                            <th>Qty</th>
                            <th>Item Cost</th>
                            <th>Sheet Cost</th>
                            <th>Hospital Price</th>
                            <th>Batch</th>
                            <th>Lot</th>
                            <th>Expiry Date</th>
                            <th>Mfg Date</th>
                        </tr>
                    </thead>
                    <tfoot>
                        <tr>
                            <td align="right"><strong>Totals:</strong></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td colspan="3"></td>
                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>
        <div class="row" style="margin-top:10px;">
            <div class="form-group">
                <div class="col-md-3 col-md-offset-5">
                    <input type="submit" value="Approve" class="btn btn-success" />
                </div>
            </div>
        </div>
    </div>
}

<script type="text/javascript">
    var myJsVariable = @Html.Raw(Json.Encode(ViewBag.PoNumber));
    $('#poNumber').val(myJsVariable);
    $("#poItemsList").DataTable({
        "ajax": {
            "url": '/PurchaseOrder/GetShippedMedicines',
            "data": { 'poNumber': myJsVariable },
            "type": "GET",
            "datatype": "json"
        },
        "columns": [
            { "data": "MedicineWithDose" },
            { "data": "OrderedQty"},
            { "data": "PricePerItem" },
            { "data": "PricePerSheet" },
            { "data":"HospitalPrice"},
            { "data": "BatchNo" },
            { "data": "LotNo" },
            { "data": "ExpiryDateDisplay" },
            { "data": "MfgDateDisplay" }
        ],
        "scrollY": "150px",
        "scrollCollapse": true,
        "paging": false,
        "info": false,
        "searching": false,
        "order": [[0, "desc"]],
        "footerCallback": function (row, data, start, end, display) {
            var api = this.api();
            // Remove the formatting to get integer data for summation
            var intVal = function (i) {
                return typeof i === 'string' ?
                    i.replace(/[\$,]/g, '') * 1 :
                    typeof i === 'number' ?
                        i : 0;
            };

            // Total quantity
            qtyTotal = api
                .column(1)
                .data()
                .reduce(function (a, b) {
                    return intVal(a) + intVal(b);
                }, 0);

            // Total item
            itemTotal = api
                .column(2)
                .data()
                .reduce(function (a, b) {
                    return intVal(a) + intVal(b);
                }, 0).toFixed(2);

            // Total sheet
            sheetTotal = api
                .column(3)
                .data()
                .reduce(function (a, b) {
                    return intVal(a) + intVal(b);
                }, 0).toFixed(2);

            // Hospital Price
            hospTotal = api
                .column(4)
                .data()
                .reduce(function (a, b) {
                    return intVal(a) + intVal(b);
                }, 0).toFixed(2);
            
            // Update footer
            $(api.column(1).footer()).html(qtyTotal);
            $(api.column(2).footer()).html(itemTotal);
            $(api.column(3).footer()).html(sheetTotal);
            $(api.column(4).footer()).html(hospTotal);
        }
    });

    //$(function () {
    //    calculateQty();
    //});

    function calculateQty() {
        var qtySum = 0;
        $('.qty').each(function () {
            alert($(this).html());
            qtySum += parseFloat($(this).html());
        });
        alert(qtySum);
        $('#grandQuantity').html(qtySum);
    }
</script>

