@model HIS.MedicineInventory
@{
    Layout = null;
}

@using (Html.BeginForm("AddModify", "MedInventory", FormMethod.Post, new { onsubmit = "return SubmitForm(this)" }))
{
    @Html.HiddenFor(model => model.MedInventoryID)
<div class="form-horizontal">
    <div class="form-group">
        @Html.LabelFor(model => model.BrandID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-sm-4">
            @Html.DropDownListFor(model => model.BrandID, ViewBag.Brands as SelectList, "--Selet--", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.BrandID)
        </div>

        @Html.LabelFor(model => model.BrandCategoryID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-sm-4">
            @Html.DropDownListFor(model => model.BrandCategoryID, ViewBag.BrandCategories as SelectList, "--Selet--", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.BrandCategoryID)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.MedicineName, new { @class = "control-label col-md-2" })
        <div class="col-sm-4">
            @Html.EditorFor(model => model.MedicineName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MedicineName)
        </div>

        @Html.LabelFor(model => model.AvailableQty, new { @class = "control-label col-md-2" })
        <div class="col-sm-4">
            @Html.EditorFor(model => model.AvailableQty, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.AvailableQty)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.PricePerItem, new { @class = "control-label col-md-2" })
        <div class="col-sm-4">
            @Html.EditorFor(model => model.PricePerItem, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PricePerItem)
        </div>

        @Html.LabelFor(model => model.PricePerSheet, new { @class = "control-label col-md-2" })
        <div class="col-sm-4">
            @Html.EditorFor(model => model.PricePerSheet, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PricePerSheet)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.BatchNo, new { @class = "control-label col-md-2" })
        <div class="col-sm-4">
            @Html.EditorFor(model => model.BatchNo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.BatchNo)
        </div>
        @Html.LabelFor(model => model.LotNo, new { @class = "control-label col-md-2" })
        <div class="col-sm-4">
            @Html.EditorFor(model => model.LotNo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LotNo)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.ExpiryDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-sm-4">
            <div id="date-popup" class="input-group date">
                @Html.EditorFor(model => model.ExpiryDate, new { htmlAttributes = new { @class = "datepicker form-control", @placeholder = "" } })
                <span class="btnPicker input-group-addon"><i class="fa fa-calendar"></i></span>
            </div>
            @Html.ValidationMessageFor(model => model.ExpiryDate, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <input type="submit" value="Submit" class="btn btn-primary" />
        <input type="reset" value="Reset" class="btn" />
    </div>
</div>
}

<script type="text/javascript"> 
    $(document).ready(function () {
        $('.datepicker').datepicker({
            keyboardNavigation: false,
            forceParse: false,
            todayHighlight: true,
            todayBtn: false,
            format:"dd-mm-yyyy"
        });

        $('.btnPicker').click(function () {
            //alert('clicked');
            $('.datepicker').datepicker('show');
        });

        $("#BrandID").change(function () {
            alert($("#BrandID").val());
            $.ajax({
                url: '/MedInventory/GetCategories',
                type: 'POST',
                datatype: 'application/json',
                contentType: 'application/json',
                data: JSON.stringify({
                    id: +$("#BrandID").val()
                }),
                success: function (res) {
                    $("#BrandCategoryID").find("option:not(:first)").remove();
                    $.each(res.d, function (data, value) {
                        $("#BrandCategoryID").append($("<option></option>").val(value.CategoryID).html(value.Category));
                    })
                }
            });
        });
        


    });
</script>