@model HIS.InPatientHistory
@{
    Layout = null;
}

<style>
    .ui-widget-content a {
        color: #fff !important
    }

    .observationHistoryGrid {
        height: 180px;
        overflow-y: scroll;
    }
</style>
@using HIS.HtmlHelpers
@using (Html.BeginForm("Observations", "InPatient", FormMethod.Post, new { onsubmit = "return SubmitObservationForm(this)" }))
{
    @Html.HiddenFor(model => model.ENMRNO)
    <div class="row">
        <div class="col-lg-12">
            <div class="panel panel-default">
                <div class="panel-heading clearfix">
                    ENMRNO: <span class="lableDisplay">@Model.ENMRNO </span>
                </div>
                <div class="panel-body ">
                     <div class="table-responsive">
                            <table id="obsHisTable" class="table table-striped table-bordered" style="width:100%">
                                <thead>
                                    <tr>
                                        <th>Date</th>
                                        <th>Doctor</th>
                                        <th>Observation</th>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                    <div class="panel-heading clearfix">
                        <a id="addNew" class="btn btn-success" style="margin-bottom:10px"><i class="fa fa-plus"></i> Add New</a>
                    </div>
                    <div id="obsForm" class="form-horizontal hidden">
                        <div class="form-group">
                            @Html.LabelFor(model => model.DoctorID, "Doctor:", htmlAttributes: new { @class = "control-label col-sm-2" })
                            <div class="col-sm-4">
                                @Html.DropDownListFor(model => model.DoctorID, ViewBag.Users as SelectList, "--Select--", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.DoctorID)
                            </div>
                            @Html.LabelFor(model => model.ObservationDate, "Date:", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-sm-4">
                                <div id="date-popup" class="input-group date">
                                    @Html.EditorFor(model => model.ObservationDate, new { htmlAttributes = new { Value = Html.DateFormat(Model.ObservationDate), @class = "datepicker form-control", @placeholder = "" } })
                                    <span class="btnpicker input-group-addon"><i class="fa fa-calendar"></i></span>
                                </div>
                                @Html.ValidationMessageFor(model => model.ObservationDate, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Observations, "Observation:", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-sm-10">
                                @Html.TextAreaFor(model => model.Observations, new { @class = "form-control rounded-0", @rows = 2 })
                                @Html.ValidationMessageFor(model => model.Observations, "", new { @class = "text-danger" })
                            </div>
                            </div>
                        <div class="form-group">
                            <div class="col-md-3 col-md-offset-3">
                                <input type="submit" value="Submit" class="btn btn-primary" />
                                <input type="reset" value="Reset" class="btn" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>
}

<script type="text/javascript">
    var myJsVariable = @Html.Raw(Json.Encode(Model.ENMRNO));
    $("#obsHisTable").DataTable({
        "ajax": {
            "url": '/InPatient/GetObservations',
            "data": { 'enmrNo': myJsVariable },
            "type": "GET",
            "datatype": "json"
        },
        "columns": [
            { "data": "DateDisplay" },
            { "data": "DoctorName" },
            { "data": "Observations" }
        ],
        "language": {
            "emptyTable": "No Observations found"
        },
        "scrollY": "100px",
        "scrollCollapse": true,
        "paging": false,
        "info": false,
        "searching": false,
        "order": [[0, "desc"]],
    });
         $('#addNew').click(function (e) {
            e.preventDefault();
            $('#obsForm').removeClass('hidden');
    });

    $('#ObservationDate').datepicker({
        keyboardNavigation: false,
        forceParse: false,
        todayHighlight: true,
        todayBtn: false,
        format: "mm/dd/yyyy"
    });

    $('.btnpicker').click(function (event) {
        event.preventDefault();
        $('#ObservationDate').datepicker('show');
    });
</script>